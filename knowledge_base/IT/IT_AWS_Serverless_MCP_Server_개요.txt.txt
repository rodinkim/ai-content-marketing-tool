**AWS 서버리스 MCP 서버 개요 및 특징**

AWS가 AI 기반 코딩 에이전트를 위한 '서버리스 MCP 서버(Serverless MCP Server)'를 공개했습니다. 이 솔루션은 기업이 수동 개입을 최소화하면서 관리형 서버리스 애플리케이션(주로 AWS Lambda 기반)을 더 빠르고 효율적으로 개발할 수 있도록 돕기 위해 설계되었습니다.

**주요 기능 및 목표:**
* **개발 수명 주기 지원:** 초기 설계부터 배포, 테스트, 문제 해결에 이르기까지 전체 애플리케이션 개발 수명 주기에 걸쳐 개발자를 안내하고 상황에 맞는 지원을 제공합니다.
* **AI 코딩 어시스턴트 강화:** 아마존 Q, 클라인, 커서 같은 AI 코딩 어시스턴트에게 서버리스 아키텍처에 대한 전문 지식, 템플릿, 패턴, 모범 사례를 제공합니다.
* **다양한 애플리케이션 개발 지원:** 백엔드, 프론트엔드, 풀스택 애플리케이션 및 사용자 지정 도메인 설정 지원을 포함합니다.
* **자동화 및 효율성:** 수동 개입을 줄여 개발 속도를 높이고 운영 부담을 경감시킵니다.

**MCP(Model Context Protocol)란?**
* 앤트로픽(Anthropic)이 개발한 개방형 프로토콜입니다.
* 애플리케이션 내 AI 에이전트가 외부 도구와 데이터에 접근하여 클라이언트-서버 메커니즘으로 사용자 요청을 처리하도록 합니다.
* 클라이언트: AI 에이전트 또는 에이전트 인터페이스.
* 서버: 도구와 데이터를 제공 (여기서는 AWS 서버리스 MCP 서버).

**기존 Lambda Tool Server와의 차이점:**
* **Lambda Tool Server:** LLM이 코드 변경 없이 기존 Lambda 함수와 MCP 도구로서 직접 상호작용하도록 돕는 브릿지 역할.
* **Serverless MCP Server:** 더 광범위한 애플리케이션 개발 및 워크플로우 유지 보수에 활용되며, 특정 런타임과 사용례에 람다를 언제 사용할지, 어떤 코드형 인프라 도구를 사용할지 등 더 상위 수준의 지침을 제공합니다. Lambda Tool Server와 보완적으로 결합 사용 가능합니다.

**작동 방식 및 보안:**
* 개발자는 GitHub 또는 PyPi에서 서버리스 MCP 서버를 다운로드하여 MCP 클라이언트 설정에 AWS 프로필을 구성합니다.
* AI 어시스턴트는 요청된 작업에 따라 서버 내 도구(예: `sam_init_tool`, `sam_deploy_tool`)를 호출하여 정보를 제공하거나 작업을 실행합니다.
* **보안:** 기본적으로 읽기 전용 모드에서 작동하며, 변형을 일으키지 않는 작업만 허용합니다. CloudWatch 로그 접근도 기본적으로 제한하여 운영 데이터 노출을 방지합니다.
* 개발자가 필요에 따라 `allow-write` 또는 `allow-sensitive-data-access` 플래그를 사용하여 보안 기본값을 재정의할 수 있습니다.